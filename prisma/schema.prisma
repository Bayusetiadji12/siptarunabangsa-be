generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String   @id @default(cuid())
  name        String   @db.VarChar(100)
  email       String   @unique @db.VarChar(100)
  password    String   @db.VarChar(100)
  nis         String   @unique @db.VarChar(30)
  phone       String   @db.VarChar(20)
  gender      Gender
  address     String?
  image       String?
  memberSince DateTime @default(now())
  is_admin    Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  borrows     Borrow[]

  @@map("users")
}

model Book {
  id          String     @id @default(cuid())
  title       String     @db.VarChar(200)
  author      String     @db.VarChar(100)
  publisher   String?    @db.VarChar(100)
  cover       String?
  description String?
  isbn        String?    @unique @db.VarChar(100)
  status      Status     @default(TERSEDIA)
  stock       Int        @default(1)
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  code        String?    @db.VarChar(50)
  source      BookSource @default(PEMBELIAN)
  year        Int?
  location    String?    @db.VarChar(20)
  borrows     Borrow[]
  categories  Category[] @relation("BookCategories")

  @@map("books")
}

model Category {
  id        String   @id @default(cuid())
  name      String   @unique @db.VarChar(100)
  image     String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  books     Book[]   @relation("BookCategories")

  @@map("categorys")
}

model Borrow {
  id         String       @id @default(cuid())
  user_id    String
  book_id    String
  borrowDate DateTime     @default(now())
  returnDate DateTime?
  dueDate    DateTime
  status     BorrowStatus @default(DIPINJAM)
  createdAt  DateTime     @default(now())
  updatedAt  DateTime     @updatedAt
  book       Book         @relation(fields: [book_id], references: [id])
  user       User         @relation(fields: [user_id], references: [id])

  @@map("borrows")
}

enum Status {
  TERSEDIA
  DIPINJAM
}

enum Gender {
  LAKI_LAKI
  PEREMPUAN
}

enum BookSource {
  PEMBELIAN
  SUMBANGAN
}

enum BorrowStatus {
  DIPINJAM
  DIKEMBALIKAN
  TERLAMBAT
  HILANG
}
